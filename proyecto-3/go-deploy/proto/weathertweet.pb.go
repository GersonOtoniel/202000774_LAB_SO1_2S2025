// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: weathertweet.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Municipalities int32

const (
	Municipalities_municipalities_unknown Municipalities = 0
	Municipalities_mixco                  Municipalities = 1
	Municipalities_guatemala              Municipalities = 2
	Municipalities_amatitlan              Municipalities = 3
	Municipalities_chinautla              Municipalities = 4
)

// Enum value maps for Municipalities.
var (
	Municipalities_name = map[int32]string{
		0: "municipalities_unknown",
		1: "mixco",
		2: "guatemala",
		3: "amatitlan",
		4: "chinautla",
	}
	Municipalities_value = map[string]int32{
		"municipalities_unknown": 0,
		"mixco":                  1,
		"guatemala":              2,
		"amatitlan":              3,
		"chinautla":              4,
	}
)

func (x Municipalities) Enum() *Municipalities {
	p := new(Municipalities)
	*p = x
	return p
}

func (x Municipalities) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Municipalities) Descriptor() protoreflect.EnumDescriptor {
	return file_weathertweet_proto_enumTypes[0].Descriptor()
}

func (Municipalities) Type() protoreflect.EnumType {
	return &file_weathertweet_proto_enumTypes[0]
}

func (x Municipalities) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Municipalities.Descriptor instead.
func (Municipalities) EnumDescriptor() ([]byte, []int) {
	return file_weathertweet_proto_rawDescGZIP(), []int{0}
}

type Weathers int32

const (
	Weathers_weather_unknown Weathers = 0
	Weathers_sunny           Weathers = 1
	Weathers_cloudy          Weathers = 2
	Weathers_rainy           Weathers = 3
	Weathers_foggy           Weathers = 4
)

// Enum value maps for Weathers.
var (
	Weathers_name = map[int32]string{
		0: "weather_unknown",
		1: "sunny",
		2: "cloudy",
		3: "rainy",
		4: "foggy",
	}
	Weathers_value = map[string]int32{
		"weather_unknown": 0,
		"sunny":           1,
		"cloudy":          2,
		"rainy":           3,
		"foggy":           4,
	}
)

func (x Weathers) Enum() *Weathers {
	p := new(Weathers)
	*p = x
	return p
}

func (x Weathers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Weathers) Descriptor() protoreflect.EnumDescriptor {
	return file_weathertweet_proto_enumTypes[1].Descriptor()
}

func (Weathers) Type() protoreflect.EnumType {
	return &file_weathertweet_proto_enumTypes[1]
}

func (x Weathers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Weathers.Descriptor instead.
func (Weathers) EnumDescriptor() ([]byte, []int) {
	return file_weathertweet_proto_rawDescGZIP(), []int{1}
}

type WeatherTweetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Municipality  Municipalities         `protobuf:"varint,1,opt,name=municipality,proto3,enum=weathertweet.Municipalities" json:"municipality,omitempty"`
	Temperature   int32                  `protobuf:"varint,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity      int32                  `protobuf:"varint,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Weather       Weathers               `protobuf:"varint,4,opt,name=weather,proto3,enum=weathertweet.Weathers" json:"weather,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeatherTweetRequest) Reset() {
	*x = WeatherTweetRequest{}
	mi := &file_weathertweet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherTweetRequest) ProtoMessage() {}

func (x *WeatherTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weathertweet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherTweetRequest.ProtoReflect.Descriptor instead.
func (*WeatherTweetRequest) Descriptor() ([]byte, []int) {
	return file_weathertweet_proto_rawDescGZIP(), []int{0}
}

func (x *WeatherTweetRequest) GetMunicipality() Municipalities {
	if x != nil {
		return x.Municipality
	}
	return Municipalities_municipalities_unknown
}

func (x *WeatherTweetRequest) GetTemperature() int32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *WeatherTweetRequest) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *WeatherTweetRequest) GetWeather() Weathers {
	if x != nil {
		return x.Weather
	}
	return Weathers_weather_unknown
}

type WeatherTweetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeatherTweetResponse) Reset() {
	*x = WeatherTweetResponse{}
	mi := &file_weathertweet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherTweetResponse) ProtoMessage() {}

func (x *WeatherTweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weathertweet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherTweetResponse.ProtoReflect.Descriptor instead.
func (*WeatherTweetResponse) Descriptor() ([]byte, []int) {
	return file_weathertweet_proto_rawDescGZIP(), []int{1}
}

func (x *WeatherTweetResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_weathertweet_proto protoreflect.FileDescriptor

const file_weathertweet_proto_rawDesc = "" +
	"\n" +
	"\x12weathertweet.proto\x12\fweathertweet\"\xc7\x01\n" +
	"\x13WeatherTweetRequest\x12@\n" +
	"\fmunicipality\x18\x01 \x01(\x0e2\x1c.weathertweet.MunicipalitiesR\fmunicipality\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x05R\vtemperature\x12\x1a\n" +
	"\bhumidity\x18\x03 \x01(\x05R\bhumidity\x120\n" +
	"\aweather\x18\x04 \x01(\x0e2\x16.weathertweet.WeathersR\aweather\".\n" +
	"\x14WeatherTweetResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status*d\n" +
	"\x0eMunicipalities\x12\x1a\n" +
	"\x16municipalities_unknown\x10\x00\x12\t\n" +
	"\x05mixco\x10\x01\x12\r\n" +
	"\tguatemala\x10\x02\x12\r\n" +
	"\tamatitlan\x10\x03\x12\r\n" +
	"\tchinautla\x10\x04*L\n" +
	"\bWeathers\x12\x13\n" +
	"\x0fweather_unknown\x10\x00\x12\t\n" +
	"\x05sunny\x10\x01\x12\n" +
	"\n" +
	"\x06cloudy\x10\x02\x12\t\n" +
	"\x05rainy\x10\x03\x12\t\n" +
	"\x05foggy\x10\x042p\n" +
	"\x13WeatherTweetService\x12Y\n" +
	"\x10SendWeatherTweet\x12!.weathertweet.WeatherTweetRequest\x1a\".weathertweet.WeatherTweetResponseB\tZ\a./protob\x06proto3"

var (
	file_weathertweet_proto_rawDescOnce sync.Once
	file_weathertweet_proto_rawDescData []byte
)

func file_weathertweet_proto_rawDescGZIP() []byte {
	file_weathertweet_proto_rawDescOnce.Do(func() {
		file_weathertweet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_weathertweet_proto_rawDesc), len(file_weathertweet_proto_rawDesc)))
	})
	return file_weathertweet_proto_rawDescData
}

var file_weathertweet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_weathertweet_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_weathertweet_proto_goTypes = []any{
	(Municipalities)(0),          // 0: weathertweet.Municipalities
	(Weathers)(0),                // 1: weathertweet.Weathers
	(*WeatherTweetRequest)(nil),  // 2: weathertweet.WeatherTweetRequest
	(*WeatherTweetResponse)(nil), // 3: weathertweet.WeatherTweetResponse
}
var file_weathertweet_proto_depIdxs = []int32{
	0, // 0: weathertweet.WeatherTweetRequest.municipality:type_name -> weathertweet.Municipalities
	1, // 1: weathertweet.WeatherTweetRequest.weather:type_name -> weathertweet.Weathers
	2, // 2: weathertweet.WeatherTweetService.SendWeatherTweet:input_type -> weathertweet.WeatherTweetRequest
	3, // 3: weathertweet.WeatherTweetService.SendWeatherTweet:output_type -> weathertweet.WeatherTweetResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_weathertweet_proto_init() }
func file_weathertweet_proto_init() {
	if File_weathertweet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_weathertweet_proto_rawDesc), len(file_weathertweet_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_weathertweet_proto_goTypes,
		DependencyIndexes: file_weathertweet_proto_depIdxs,
		EnumInfos:         file_weathertweet_proto_enumTypes,
		MessageInfos:      file_weathertweet_proto_msgTypes,
	}.Build()
	File_weathertweet_proto = out.File
	file_weathertweet_proto_goTypes = nil
	file_weathertweet_proto_depIdxs = nil
}
